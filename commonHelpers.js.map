{"version":3,"file":"commonHelpers.js","sources":["../src/js/1-timer.js"],"sourcesContent":["// import flatpickr from 'flatpickr';\n// import iziToast from 'izitoast';\n\n// const inputEl = document.querySelector('#datetime-picker');\n// const buttonEl = document.querySelector('[data-start]');\n// const days = document.querySelector('[data-days]');\n// const hours = document.querySelector('[data-hours]');\n// const minutes = document.querySelector('[data-minutes]');\n// const seconds = document.querySelector('[data-seconds]');\n\n// let intervalId = null;\n// let userSelectedDate = '';\n// let nowTime = Date.now();\n// let corectDate = new Date(nowTime);\n// let nowHours = corectDate.getHours();\n// let nowMinutes = corectDate.getMinutes();\n// let nowDays = corectDate.getDate();\n\n// buttonEl.disabled = true;\n\n// function convertMs(ms) {\n//   const second = 1000;\n//   const minute = second * 60;\n//   const hour = minute * 60;\n//   const day = hour * 24;\n//   const days = Math.floor(ms / day);\n//   const hours = Math.floor((ms % day) / hour);\n//   const minutes = Math.floor(((ms % day) % hour) / minute);\n//   const seconds = Math.floor((((ms % day) % hour) % minute) / second);\n//   return { days, hours, minutes, seconds };\n// }\n\n// const timeObj = {\n//   seconds: 59,\n//   minutes: '',\n//   hours: '',\n//   days: '',\n// };\n\n// const options = {\n//   enableTime: true,\n//   time_24hr: true,\n//   defaultDate: new Date(),\n//   minuteIncrement: 1,\n//   onClose(selectedDates) {\n//     console.log(selectedDates[0]);\n//     clearInterval(intervalId);\n//     timeObj.seconds = 59;\n//     timeObj.minutes = '';\n//     timeObj.hours = '';\n//     timeObj.days = '';\n//     userSelectedDate = inputEl.value;\n//     let userSelectedDateUnix = new Date(userSelectedDate);\n//     if (userSelectedDateUnix.getTime() <= Date.now()) {\n//       buttonEl.disabled = true;\n//       iziToast.error({\n//         title: 'Error',\n//         titleColor: 'white',\n//         message: 'Please choose a date in the future',\n//         messageColor: 'white',\n//         backgroundColor: 'red',\n//       });\n//     } else {\n//       buttonEl.disabled = false;\n//       timeObj.minutes = parseInt(userSelectedDate.slice(14, 16)) - nowMinutes;\n//       timeObj.hours = parseInt(userSelectedDate.slice(11, 13)) - nowHours;\n//       timeObj.days = parseInt(userSelectedDate.slice(8, 10)) - nowDays;\n//       console.log(timeObj);\n//     }\n//   },\n// };\n// flatpickr('#datetime-picker', options);\n// buttonEl.addEventListener('click', timer);\n// function timer() {\n//   intervalId = setInterval(function f() {\n//     buttonEl.disabled = true;\n//     console.log(timeObj);\n//     seconds.innerHTML = timeObj.seconds;\n//     minutes.innerHTML = timeObj.minutes;\n//     hours.innerHTML = timeObj.hours;\n//     days.innerHTML = timeObj.days;\n//     timeObj.seconds -= 1;\n//     if (timeObj.seconds === -1) {\n//       timeObj.minutes -= 1;\n//       timeObj.seconds = 59;\n//     } else if (timeObj.minutes === -1) {\n//       console.log((timeObj.hours -= 1));\n//       timeObj.mins = 59;\n//     } else if (timeObj.hours === -1) {\n//       timeObj.days -= 1;\n//       timeObj.hours = 23;\n//     } else if (\n//       timeObj.days === 0 &&\n//       timeObj.hours === 0 &&\n//       timeObj.minutes === 0 &&\n//       timeObj.seconds === 0\n//     ) {\n//       clearInterval(intervalId);\n//     }\n//   }, 1000);\n// }\n// import flatpickr from 'flatpickr';\n// import iziToast from 'izitoast';\n\n// const inputEl = document.querySelector('#datetime-picker');\n// const buttonEl = document.querySelector('[data-start]');\n// const daysEl = document.querySelector('[data-days]');\n// const hoursEl = document.querySelector('[data-hours]');\n// const minutesEl = document.querySelector('[data-minutes]');\n// const secondsEl = document.querySelector('[data-seconds]');\n\n// let intervalId;\n// let userSelectedDate = '';\n// let nowTime = Date.now();\n// let correctDate = new Date(nowTime);\n// let nowHours = correctDate.getHours();\n// let nowMinutes = correctDate.getMinutes();\n// let nowDays = correctDate.getDate();\n\n// const timeObj = {\n//   seconds: 59,\n//   minutes: '',\n//   hours: '',\n//   days: '',\n// };\n\n// const options = {\n//   enableTime: true,\n//   time_24hr: true,\n//   defaultDate: new Date(),\n//   minuteIncrement: 1,\n//   onClose(selectedDates) {\n//     clearInterval(intervalId);\n//     resetTimeObject();\n//     userSelectedDate = inputEl.value;\n//     let userSelectedDateUnix = new Date(userSelectedDate);\n//     if (userSelectedDateUnix.getTime() < Date.now()) {\n//       buttonEl.disabled = true;\n//       iziToast.error({\n//         title: 'Error',\n//         titleColor: 'white',\n//         message: 'Please choose a date in the future',\n//         messageColor: 'white',\n//         backgroundColor: 'red',\n//       });\n//     } else {\n//       buttonEl.disabled = false;\n//       setTimeDifference(userSelectedDateUnix);\n//     }\n//   },\n// };\n\n// flatpickr('#datetime-picker', options);\n// buttonEl.addEventListener('click', startTimer);\n\n// function resetTimeObject() {\n//   timeObj.seconds = 59;\n//   timeObj.minutes = '';\n//   timeObj.hours = '';\n//   timeObj.days = '';\n// }\n\n// function setTimeDifference(userSelectedDateUnix) {\n//   timeObj.minutes = parseInt(userSelectedDateUnix.getMinutes()) - nowMinutes;\n//   timeObj.hours = parseInt(userSelectedDateUnix.getHours()) - nowHours;\n//   timeObj.days = parseInt(userSelectedDateUnix.getDate()) - nowDays;\n// }\n\n// function updateTimerDisplay() {\n//   daysEl.innerHTML = formatTime(timeObj.hours);\n//   hoursEl.innerHTML = formatTime(timeObj.hours);\n//   minutesEl.innerHTML = formatTime(timeObj.minutes);\n//   secondsEl.innerHTML = formatTime(timeObj.seconds);\n// }\n\n// function formatTime(time) {\n//   return time < 10 ? `0${time}` : time;\n// }\n\n// function startTimer() {\n//   intervalId = setInterval(updateTimer, 1000);\n//   buttonEl.disabled = true;\n// }\n\n// function updateTimer() {\n//   updateTimerDisplay();\n//   timeObj.seconds -= 1;\n//   if (timeObj.seconds === -1) {\n//     timeObj.minutes -= 1;\n//     timeObj.seconds = 59;\n//   } else if (timeObj.minutes === -1) {\n//     timeObj.hours -= 1;\n//     timeObj.minutes = 59;\n//   } else if (timeObj.hours === -1) {\n//     timeObj.days -= 1;\n//     timeObj.hours = 23;\n//   }\n// }\nimport flatpickr from 'flatpickr';\nimport iziToast from 'izitoast';\n\nconst inputEl = document.querySelector('#datetime-picker');\nconst buttonEl = document.querySelector('[data-start]');\nconst daysEl = document.querySelector('[data-days]');\nconst hoursEl = document.querySelector('[data-hours]');\nconst minutesEl = document.querySelector('[data-minutes]');\nconst secondsEl = document.querySelector('[data-seconds]');\n\nlet intervalId = null;\nlet userSelectedDate = '';\n\nbuttonEl.disabled = true;\n\nconst options = {\n  enableTime: true,\n  time_24hr: true,\n  defaultDate: new Date(),\n  minuteIncrement: 1,\n  onClose(selectedDates) {\n    clearInterval(intervalId);\n    userSelectedDate = selectedDates[0];\n    if (userSelectedDate.getTime() < Date.now()) {\n      buttonEl.disabled = true;\n      iziToast.error({\n        title: 'Error',\n        titleColor: 'white',\n        message: 'Please choose a date in the future',\n        messageColor: 'white',\n        backgroundColor: 'red',\n      });\n    } else {\n      buttonEl.disabled = false;\n    }\n  },\n};\n\nflatpickr('#datetime-picker', options);\nbuttonEl.addEventListener('click', startTimer);\n\nfunction changeNumForTimer(timeObj) {\n  daysEl.textContent = addZero(timeObj.days);\n  hoursEl.textContent = addZero(timeObj.hours);\n  minutesEl.textContent = addZero(timeObj.minutes);\n  secondsEl.textContent = addZero(timeObj.seconds);\n}\n\nfunction addZero(value) {\n  return value < 10 ? `0${value}` : value;\n}\n\nfunction startTimer() {\n  intervalId = setInterval(() => {\n    const TimeDifference = userSelectedDate.getTime() - Date.now();\n    if (TimeDifference <= 0) {\n      clearInterval(intervalId);\n      buttonEl.disabled = false;\n      iziToast.success({\n        title: 'Success',\n        titleColor: 'white',\n        message: 'Countdown finished!',\n        messageColor: 'white',\n        backgroundColor: 'green',\n      });\n    } else {\n      const timeObj = convertMs(TimeDifference);\n      changeNumForTimer(timeObj);\n    }\n  }, 1000);\n  buttonEl.disabled = true;\n}\n\nfunction convertMs(ms) {\n  const second = 1000;\n  const minute = second * 60;\n  const hour = minute * 60;\n  const day = hour * 24;\n\n  const days = Math.floor(ms / day);\n  const hours = Math.floor((ms % day) / hour);\n  const minutes = Math.floor((ms % hour) / minute);\n  const seconds = Math.floor((ms % minute) / second);\n\n  return { days, hours, minutes, seconds };\n}\n"],"names":["buttonEl","daysEl","hoursEl","minutesEl","secondsEl","intervalId","userSelectedDate","options","selectedDates","iziToast","flatpickr","startTimer","changeNumForTimer","timeObj","addZero","value","TimeDifference","convertMs","ms","days","hours","minutes","seconds"],"mappings":"+IAyMgB,SAAS,cAAc,kBAAkB,EACzD,MAAMA,EAAW,SAAS,cAAc,cAAc,EAChDC,EAAS,SAAS,cAAc,aAAa,EAC7CC,EAAU,SAAS,cAAc,cAAc,EAC/CC,EAAY,SAAS,cAAc,gBAAgB,EACnDC,EAAY,SAAS,cAAc,gBAAgB,EAEzD,IAAIC,EAAa,KACbC,EAAmB,GAEvBN,EAAS,SAAW,GAEpB,MAAMO,EAAU,CACd,WAAY,GACZ,UAAW,GACX,YAAa,IAAI,KACjB,gBAAiB,EACjB,QAAQC,EAAe,CACrB,cAAcH,CAAU,EACxBC,EAAmBE,EAAc,CAAC,EAC9BF,EAAiB,QAAO,EAAK,KAAK,IAAG,GACvCN,EAAS,SAAW,GACpBS,EAAS,MAAM,CACb,MAAO,QACP,WAAY,QACZ,QAAS,qCACT,aAAc,QACd,gBAAiB,KACzB,CAAO,GAEDT,EAAS,SAAW,EAEvB,CACH,EAEAU,EAAU,mBAAoBH,CAAO,EACrCP,EAAS,iBAAiB,QAASW,CAAU,EAE7C,SAASC,EAAkBC,EAAS,CAClCZ,EAAO,YAAca,EAAQD,EAAQ,IAAI,EACzCX,EAAQ,YAAcY,EAAQD,EAAQ,KAAK,EAC3CV,EAAU,YAAcW,EAAQD,EAAQ,OAAO,EAC/CT,EAAU,YAAcU,EAAQD,EAAQ,OAAO,CACjD,CAEA,SAASC,EAAQC,EAAO,CACtB,OAAOA,EAAQ,GAAK,IAAIA,CAAK,GAAKA,CACpC,CAEA,SAASJ,GAAa,CACpBN,EAAa,YAAY,IAAM,CAC7B,MAAMW,EAAiBV,EAAiB,QAAS,EAAG,KAAK,IAAG,EAC5D,GAAIU,GAAkB,EACpB,cAAcX,CAAU,EACxBL,EAAS,SAAW,GACpBS,EAAS,QAAQ,CACf,MAAO,UACP,WAAY,QACZ,QAAS,sBACT,aAAc,QACd,gBAAiB,OACzB,CAAO,MACI,CACL,MAAMI,EAAUI,EAAUD,CAAc,EACxCJ,EAAkBC,CAAO,CAC1B,CACF,EAAE,GAAI,EACPb,EAAS,SAAW,EACtB,CAEA,SAASiB,EAAUC,EAAI,CAMrB,MAAMC,EAAO,KAAK,MAAMD,EAAK,KAAG,EAC1BE,EAAQ,KAAK,MAAOF,EAAK,MAAO,IAAI,EACpCG,EAAU,KAAK,MAAOH,EAAK,KAAQ,GAAM,EACzCI,EAAU,KAAK,MAAOJ,EAAK,IAAU,GAAM,EAEjD,MAAO,CAAE,KAAAC,EAAM,MAAAC,EAAO,QAAAC,EAAS,QAAAC,CAAO,CACxC"}